on: 
  push:
    paths-ignore: 
      - 'README.md'

jobs:
  setup:
    name: Choose Secrets Environment Job
    runs-on: ubuntu-latest
    steps:
      - id: setup
        name: Setup Environment Setp
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/main" ]]; then
            echo "build_env=prod" >> $GITHUB_OUTPUT
          else
            echo "build_env=dev" >> $GITHUB_OUTPUT
          fi
    outputs:
      build_env: ${{ steps.setup.outputs.build_env }}

  build_project:
    name: Build Project
    runs-on: ubuntu-latest
    needs: setup
    environment: ${{ needs.setup.outputs.build_env }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.x

      - name: Azure CLI Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - id: resolve-vars
        name: Resolve variables
        run: pwsh ./Deployment/ResolveVars.ps1 -BUILD_ENV ${{ needs.setup.outputs.build_env }}

      - name: Build azure environment
        id: deploy
        uses: azure/arm-deploy@v2
        with:
          deploymentName: '${{ needs.setup.outputs.build_env }}-${{ github.run_number }}'
          resourceGroupName: ${{ steps.resolve-vars.outputs.resourceGroupName }}
          template: ./Deployment/deploy.bicep
          parameters: >
            prefix=${{ steps.resolve-vars.outputs.prefix }}
            customDomainName="${{ vars.CUSTOM_DOMAIN_NAME }}"

      - id: init-static-web
        name: Init variables for static webapp
        run: pwsh ./Deployment/InitStaticWeb.ps1 -BUILD_ENV ${{ needs.setup.outputs.build_env }}
        env:
          APPSETTINGS: ${{ vars.APPSETTINGS }}

      - name: Build and deploy Blazor WASM app
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ steps.init-static-web.outputs.apiKey }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: 'EKlee.ActivityTracker'
          output_location: '/wwwroot'  
